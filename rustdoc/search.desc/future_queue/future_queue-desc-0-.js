searchState.loadedDescShard("future_queue", 0, "<code>future_queue</code> provides ways to run several futures:\nStream for the <code>future_queue</code> method.\nContext for a function in a <code>FutureQueue</code> or …\nStream for the <code>future_queue_grouped</code> method.\nAn extension trait for <code>Stream</code>s that provides <code>future_queue</code>.\nReturns the current global weight of futures.\nReturns the current weight of futures being run within …\nReturns the currently running weight of futures.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn adaptor for creating a queue of pending futures …\nAn adaptor for creating a queue of pending futures, where …\nAcquires a mutable reference to the underlying sink or …\nAcquires a mutable reference to the underlying sink or …\nAcquires a pinned mutable reference to the underlying sink …\nAcquires a pinned mutable reference to the underlying sink …\nAcquires a reference to the underlying sink or stream that …\nAcquires a reference to the underlying sink or stream that …\nReturns a global slot number: an integer that is unique …\nReturns a group slot number: an integer that is unique for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this combinator, returning the underlying sink or …\nConsumes this combinator, returning the underlying sink or …\nReturns the maximum weight of futures allowed to be run by …\nReturns the maximum weight of futures allowed to be run …\nReturns the maximum weight of futures allowed to be run by …\nTraits to aid in type definitions.\nThe function to obtain the future from\nThe function to obtain the future from.\nThe associated <code>Future</code> type.\nThe associated <code>Future</code> type.\nA trait for types which can be converted into functions …\nThe associated key lookup type.\nA trait for types which can be converted into a <code>Future</code> and …\nTurns self into its components.\nTurns self into its components.\nThe weight of the future.\nReturns the weight.")